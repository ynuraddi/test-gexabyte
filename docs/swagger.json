{
    "swagger": "2.0",
    "info": {
        "description": "Gexabyte test assignment",
        "title": "Gexabyte",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/currencies": {
            "get": {
                "description": "Retrieves a list of tracked currencies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "List currencies",
                "responses": {
                    "200": {
                        "description": "Retrieves a list of tracked currencies",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Currency"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        },
        "/currency": {
            "post": {
                "description": "Creates a new tracked pair.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "currency"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Currency to create",
                        "name": "currency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateCurrencyReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns a 200 OK status to indicate the service is up and running",
                "tags": [
                    "ping"
                ],
                "summary": "Ping endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/prices": {
            "get": {
                "description": "Retrieves a list of current currency prices.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "List currency prices",
                "responses": {
                    "200": {
                        "description": "A list of current currency prices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.CurrencyPrice"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        },
        "/prices/current": {
            "get": {
                "description": "Retrieves current prices fof symbols and save it in db.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "Get purrent prices of symbols",
                "parameters": [
                    {
                        "type": "string",
                        "example": "[\"BTCUSDT\", \"ETHUSDT\"]",
                        "description": "symbols",
                        "name": "symbols",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GetCurrencyPriceDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        },
        "/prices/historical": {
            "get": {
                "description": "Retrieves historical prices for a currency based on the specified parameters. Requires `symbol`, `interval`, `startTime`, `endTime`, `page`, and `limit` query parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prices"
                ],
                "summary": "List historical currency prices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency symbol",
                        "name": "symbol",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "1s",
                            "1m",
                            "3m",
                            "5m",
                            "15m",
                            "30m",
                            "1h",
                            "2h",
                            "4h",
                            "6h",
                            "8h",
                            "12h",
                            "1d",
                            "3d",
                            "1w",
                            "1M"
                        ],
                        "type": "string",
                        "description": "Interval",
                        "name": "interval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start time in Unix timestamp milliseconds",
                        "name": "startTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "End time in Unix timestamp milliseconds",
                        "name": "endTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Max limit is 1000",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with historical price data",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GetCurrencyPriceHistoricalDTORes"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        },
        "/stat/24h": {
            "get": {
                "description": "Retrieves 24-hour statistics for the specified symbols.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stat"
                ],
                "summary": "Get 24h statistics",
                "parameters": [
                    {
                        "type": "string",
                        "example": "[\"BTCUSDT\", \"ETHUSDT\"]",
                        "description": "symbols",
                        "name": "symbols",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GetCurrencyStat24HDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.CreateCurrencyReq": {
            "type": "object",
            "required": [
                "symbol"
            ],
            "properties": {
                "symbol": {
                    "type": "string"
                }
            }
        },
        "http.ErrMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Currency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        },
        "model.CurrencyPrice": {
            "type": "object",
            "properties": {
                "currencyID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "model.CurrencyPriceInterval": {
            "type": "object",
            "properties": {
                "close_price": {
                    "type": "number"
                },
                "close_time": {
                    "type": "integer"
                },
                "high_price": {
                    "type": "number"
                },
                "low_price": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "open_time": {
                    "type": "integer"
                }
            }
        },
        "model.GetCurrencyPriceDTO": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number"
                },
                "symbol": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "model.GetCurrencyPriceHistoricalDTORes": {
            "type": "object",
            "properties": {
                "max_page": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CurrencyPriceInterval"
                    }
                }
            }
        },
        "model.GetCurrencyStat24HDTO": {
            "type": "object",
            "properties": {
                "close_time": {
                    "type": "integer"
                },
                "high_price": {
                    "type": "number"
                },
                "last_price": {
                    "type": "number"
                },
                "low_price": {
                    "type": "number"
                },
                "open_price": {
                    "type": "number"
                },
                "open_time": {
                    "description": "Volume      float64 `json:\"volume,string\"`\nQuoteVolume float64 `json:\"quoteVolume,string\"`",
                    "type": "integer"
                },
                "symbol": {
                    "type": "string"
                }
            }
        }
    }
}